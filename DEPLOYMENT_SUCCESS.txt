================================================================================
  PI CAR SERVER DEPLOYED SUCCESSFULLY! ‚úÖ
================================================================================

Server Status: RUNNING ‚úì
Location: pi@pi_local (192.168.100.148)
Tmux Session: car_backend

================================================================================
  SERVER INFORMATION
================================================================================

Pi IP Address: 192.168.100.148

Endpoints:
  ‚Ä¢ Status Page:  http://192.168.100.148:5000/
  ‚Ä¢ Health Check: http://192.168.100.148:5000/health
  ‚Ä¢ Video Stream: http://192.168.100.148:5000/video
  ‚Ä¢ WebSocket:    ws://192.168.100.148:5000/socket.io/

Server Health: ‚úì OK
{
  "status": "ok",
  "camera": true,
  "controller": true
}

================================================================================
  CAMERA STATUS
================================================================================

‚ö†Ô∏è  Camera timeout detected (common issue)

Error: Camera frontend has timed out
Likely cause: Loose ribbon cable connection

QUICK FIX:
1. Power off Pi: ssh pi@pi_local 'sudo shutdown -h now'
2. Disconnect power
3. Reseat camera ribbon cable (both ends):
   - Camera module end
   - Pi board end (near HDMI port)
4. Ensure blue tab faces correct direction
5. Power on Pi
6. Restart server: ./restart_pi_server.sh

The server IS running and will work for control commands.
Video stream will show placeholder until camera is fixed.

================================================================================
  SERVER MANAGEMENT
================================================================================

View Logs:
  ./view_pi_logs.sh
  (Press Ctrl+B then D to detach)

Stop Server:
  ./stop_pi_server.sh

Restart Server:
  ./restart_pi_server.sh

Redeploy After Code Changes:
  ./deploy_to_pi.sh
  ./restart_pi_server.sh

================================================================================
  iOS APP CONFIGURATION
================================================================================

Update: ios-app/PiCar/PiCar/Models/WebSocketClient.swift

Change line 15 from:
  static let PI_SERVER_IP = "192.168.100.148"

To:
  static let PI_SERVER_IP = "192.168.100.148"  // Already correct!

Or use hostname:
  static let PI_SERVER_IP = "pi_local"

Then:
1. Clean Build Folder (Cmd+Shift+K)
2. Build and Run (Cmd+R)

================================================================================
  WHAT WORKS NOW
================================================================================

‚úÖ Server running on Pi
‚úÖ HTTP endpoints responding
‚úÖ WebSocket server ready
‚úÖ Control commands will be received
‚úÖ Motor commands logged (motors not attached - expected)
‚ö†Ô∏è  Camera needs cable reseating (common first-time issue)

================================================================================
  TEST IN IOS APP
================================================================================

1. Ensure network settings added in Xcode (see BUILD_ERROR_FIXED.txt)
2. Build and run iOS app
3. Should see:
   ‚úÖ "Connected" status (green dot)
   ‚ö†Ô∏è  Video placeholder (until camera fixed)
   ‚úÖ Joystick functional
   ‚úÖ Position updates working

4. Check server logs to see commands received:
   ./view_pi_logs.sh

================================================================================
  CAMERA TROUBLESHOOTING
================================================================================

The camera timeout is a common issue. Try these in order:

1. Reseat Camera Cable:
   - Power off Pi completely
   - Disconnect both ends of ribbon cable
   - Clean contacts if needed
   - Reconnect firmly (blue tab facing HDMI on Pi end)
   - Power on and restart server

2. Test Camera Directly:
   ssh pi@pi_local
   libcamera-hello --list-cameras

   Should show: Available cameras

3. Enable Camera (if not enabled):
   sudo raspi-config
   Interface Options > Legacy Camera > Enable
   Reboot

4. Check Camera Module Version:
   - Pi Camera v1/v2: Should work automatically
   - Pi Camera v3: Requires updated firmware
   - USB webcam: Needs different configuration

5. If still not working:
   - Try different camera module
   - Try different cable
   - Update Pi firmware: sudo rpi-update

================================================================================
  QUICK COMMANDS
================================================================================

# View server logs
./view_pi_logs.sh

# Restart server
./restart_pi_server.sh

# Test endpoints
curl http://192.168.100.148:5000/health

# SSH to Pi
ssh pi@pi_local

# Test camera on Pi
ssh pi@pi_local 'libcamera-hello --list-cameras'

# Check tmux sessions
ssh pi@pi_local 'tmux ls'

================================================================================
  NEXT STEPS
================================================================================

1. ‚úÖ Server is deployed and running
2. ‚ö†Ô∏è  Fix camera cable (optional - control works without it)
3. ‚úÖ iOS app IP address already correct (192.168.100.148)
4. üì± Add network settings in Xcode (see BUILD_ERROR_FIXED.txt)
5. üì± Build and run iOS app
6. üéÆ Test control with joystick

================================================================================
  FOR HELP
================================================================================

Guides:
  ‚Ä¢ PI_DEPLOYMENT_GUIDE.md - Complete Pi management guide
  ‚Ä¢ BUILD_ERROR_FIXED.txt - iOS app configuration
  ‚Ä¢ MACOS_TESTING.md - Local testing guide

Commands:
  ‚Ä¢ ./view_pi_logs.sh - See what's happening
  ‚Ä¢ ./restart_pi_server.sh - Fix most issues

================================================================================

Status: Server deployed ‚úÖ | Running ‚úÖ | Ready for iOS app testing ‚úÖ

Camera: Needs cable reseating (common issue, easy fix)
Motors: Not attached (expected, simulation mode works)
Control: Ready to receive commands from iOS app ‚úÖ

================================================================================

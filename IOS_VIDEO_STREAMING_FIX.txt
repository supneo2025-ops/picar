================================================================================
  iOS VIDEO STREAMING FIX
================================================================================

Problem: iOS app not showing camera stream from Raspberry Pi
Root Cause: Missing App Transport Security (ATS) configuration
Status: ‚úÖ FIXED - Info.plist created with ATS settings

================================================================================
  WHY THE VIDEO STREAM WASN'T WORKING
================================================================================

Issue: iOS blocks HTTP connections by default

Since iOS 9, Apple requires all network connections to use HTTPS (secure) by
default. This is called "App Transport Security" (ATS).

Our Pi server uses HTTP (not HTTPS):
  - Video stream: http://192.168.100.148:5000/video
  - WebSocket: ws://192.168.100.148:5000/socket.io/

Without proper ATS configuration, iOS silently blocks these connections.

Error you might see in Xcode console:
  "App Transport Security has blocked a cleartext HTTP (http://) resource
   load since it is insecure. Temporary exceptions can be configured via
   your app's Info.plist file."

================================================================================
  THE FIX
================================================================================

Created Info.plist with ATS exceptions:
  Location: ios-app/PiCar/PiCar/Info.plist

This file tells iOS:
  1. Allow HTTP connections (NSAllowsArbitraryLoads)
  2. Allow local network access (NSAllowsLocalNetworking)
  3. Explain why we need local network (NSLocalNetworkUsageDescription)

Settings Added:
  ‚úì NSAppTransportSecurity with NSAllowsArbitraryLoads = YES
  ‚úì NSAllowsLocalNetworking = YES
  ‚úì NSLocalNetworkUsageDescription (user-facing explanation)

================================================================================
  NEXT STEPS - CONFIGURE XCODE PROJECT
================================================================================

The Info.plist file has been created, but you need to add it to your Xcode
project manually:

Step 1: Open Xcode
  cd /Users/hungnx/PycharmProjects/picar/ios-app/PiCar
  open PiCar.xcodeproj

Step 2: Add Info.plist to Project
  1. In Xcode, find the "PiCar" folder in the Navigator (left side)
  2. Right-click on the "PiCar" folder (blue icon)
  3. Select "Add Files to PiCar..."
  4. Navigate to: ios-app/PiCar/PiCar/Info.plist
  5. Make sure "Copy items if needed" is UNCHECKED
  6. Make sure "Add to targets: PiCar" is CHECKED
  7. Click "Add"

Step 3: Configure Build Settings
  1. Select "PiCar" project in Navigator (top blue icon)
  2. Select "PiCar" target
  3. Go to "Build Settings" tab
  4. Search for "Info.plist File"
  5. Set the value to: PiCar/Info.plist
     (or just "Info.plist" if that doesn't work)

Step 4: Verify Info.plist Is Used
  1. Select "PiCar" target
  2. Go to "Info" tab
  3. You should see:
     - Custom iOS Target Properties section
     - App Transport Security Settings (Dictionary)
     - NSLocalNetworkUsageDescription (String)

Step 5: Clean and Rebuild
  1. Product > Clean Build Folder (Cmd+Shift+K)
  2. Product > Build (Cmd+B)
  3. Product > Run (Cmd+R)

================================================================================
  ENHANCED DEBUG LOGGING
================================================================================

Added debug logging to VideoStreamView.swift to help diagnose issues:

What you'll see in Xcode console when video stream works:
  üìπ [VideoStream] Loading MJPEG stream from: http://192.168.100.148:5000/video
  üìπ [VideoStream] Stream task started
  üìπ [VideoStream] Received response: <NSHTTPURLResponse>
  üìπ [VideoStream] Status code: 200
  üìπ [VideoStream] Content-Type: multipart/x-mixed-replace; boundary=frame
  üìπ [VideoStream] Received 33789 bytes
  üñºÔ∏è [VideoStream] Decoded frame successfully
  ‚úÖ [VideoStream] First frame displayed!
  üìπ [VideoStream] Received 32456 bytes
  üñºÔ∏è [VideoStream] Decoded frame successfully
  ...

What you'll see if ATS blocks the connection:
  üìπ [VideoStream] Loading MJPEG stream from: http://192.168.100.148:5000/video
  üìπ [VideoStream] Stream task started
  ‚ùå [VideoStream] Error: A server with the specified hostname could not be found
  ‚ùå [VideoStream] Domain: NSURLErrorDomain, Code: -1003

What you'll see if Pi server is down:
  ‚ùå [VideoStream] Error: Could not connect to the server
  ‚ùå [VideoStream] Domain: NSURLErrorDomain, Code: -1004

What you'll see if wrong IP address:
  ‚ùå [VideoStream] Error: The request timed out
  ‚ùå [VideoStream] Domain: NSURLErrorDomain, Code: -1001

================================================================================
  VERIFICATION STEPS
================================================================================

After configuring Xcode:

1. Make sure Pi server is running:
   ./start_pi_server.sh

2. Verify video stream works in browser:
   open http://192.168.100.148:5000/video

3. Run iOS app in Xcode

4. Check Xcode console for debug logs:
   - Should see "üìπ [VideoStream] Loading MJPEG stream..."
   - Should see "Status code: 200"
   - Should see "‚úÖ First frame displayed!"

5. Video should appear in app within 2-3 seconds

If video still doesn't work:
  - Check Xcode console for error messages
  - Verify Info.plist is in Build Settings
  - Verify Pi server IP is correct (192.168.100.148)
  - Verify you're on same network as Pi
  - Try Clean Build Folder and rebuild

================================================================================
  COMMON ERROR CODES
================================================================================

NSURLErrorDomain Code -1003:
  "A server with the specified hostname could not be found"
  ‚Üí ATS is blocking HTTP connections
  ‚Üí Info.plist not properly configured
  ‚Üí Fix: Add Info.plist to Xcode project

NSURLErrorDomain Code -1004:
  "Could not connect to the server"
  ‚Üí Pi server not running
  ‚Üí Fix: ./start_pi_server.sh

NSURLErrorDomain Code -1001:
  "The request timed out"
  ‚Üí Wrong IP address
  ‚Üí Not on same network as Pi
  ‚Üí Fix: Check IP with: ssh pi@pi_local 'hostname -I'

NSURLErrorDomain Code -1200:
  "An SSL error has occurred and a secure connection cannot be made"
  ‚Üí Trying to use HTTPS with HTTP server
  ‚Üí Fix: Ensure URL uses http:// not https://

================================================================================
  SECURITY NOTE
================================================================================

NSAllowsArbitraryLoads = YES allows ALL HTTP connections, not just local.

For production app, you should use more restrictive settings:

<key>NSAppTransportSecurity</key>
<dict>
    <key>NSExceptionDomains</key>
    <dict>
        <key>192.168.100.148</key>
        <dict>
            <key>NSExceptionAllowsInsecureHTTPLoads</key>
            <true/>
            <key>NSIncludesSubdomains</key>
            <true/>
        </dict>
    </dict>
    <key>NSAllowsLocalNetworking</key>
    <true/>
</dict>

This only allows HTTP for your specific Pi IP address.

For now, NSAllowsArbitraryLoads is fine since this is a local development app.

================================================================================
  FILE CHANGES SUMMARY
================================================================================

Created:
  ‚úì ios-app/PiCar/PiCar/Info.plist
    - ATS configuration
    - Local network permission

Modified:
  ‚úì ios-app/PiCar/PiCar/Views/VideoStreamView.swift
    - Added debug logging
    - Better error reporting
    - Response logging

Next Action Required:
  ‚Üí Add Info.plist to Xcode project (see Step 2 above)
  ‚Üí Build and run app

================================================================================
  EXPECTED RESULTS AFTER FIX
================================================================================

When you run the app:

1. App launches showing:
   - Pi Car Controller header
   - Video loading indicator
   - Joystick at bottom
   - "Disconnected" status (WebSocket connecting)

2. Within 2-3 seconds:
   - Video stream appears showing live camera feed
   - Status changes to "Connected"
   - Joystick becomes responsive

3. Moving joystick:
   - Turn and Speed values update
   - WebSocket sends commands to Pi
   - Motors respond (if attached)

4. Xcode console shows:
   - Video stream debug logs
   - Frames being received
   - No error messages

Everything should work smoothly! üéâ

================================================================================
  TROUBLESHOOTING
================================================================================

Issue: "Failed to load Info.plist"
  ‚Üí Info.plist has syntax error
  ‚Üí Fix: Verify XML syntax, use the one we created

Issue: Video shows black screen
  ‚Üí Stream connected but no frames
  ‚Üí Check Pi camera with: curl http://192.168.100.148:5000/video
  ‚Üí May need to reseat camera ribbon cable

Issue: "Camera Unavailable" error
  ‚Üí Video endpoint not responding
  ‚Üí Check Pi server logs: ./view_pi_logs.sh
  ‚Üí Check camera timeout errors

Issue: App crashes on launch
  ‚Üí Info.plist misconfigured
  ‚Üí Check Xcode Build Settings
  ‚Üí Verify Info.plist path is correct

Issue: WebSocket won't connect
  ‚Üí Different issue from video stream
  ‚Üí Check WebSocketClient.swift PI_SERVER_IP
  ‚Üí Check Pi server is running on port 5000

================================================================================
  TESTING CHECKLIST
================================================================================

Before testing app:
  ‚òê Pi server running (./start_pi_server.sh)
  ‚òê Video works in browser (open http://192.168.100.148:5000/video)
  ‚òê Mac and Pi on same network
  ‚òê Info.plist added to Xcode project
  ‚òê App built successfully (no errors)

When testing app:
  ‚òê Video appears within 3 seconds
  ‚òê Video is smooth (not frozen)
  ‚òê WebSocket shows "Connected"
  ‚òê Joystick responds to touch
  ‚òê Turn/Speed values update
  ‚òê No errors in Xcode console

If all checked:
  ‚úÖ iOS app is working correctly!

================================================================================
  SUMMARY
================================================================================

Problem: iOS app not showing video stream
Root Cause: Missing App Transport Security configuration
Solution: Created Info.plist with ATS settings + debug logging

Files Created/Modified:
  1. ios-app/PiCar/PiCar/Info.plist (NEW)
  2. ios-app/PiCar/PiCar/Views/VideoStreamView.swift (UPDATED)

Action Required:
  1. Add Info.plist to Xcode project
  2. Build and run app
  3. Check Xcode console for debug logs

Expected Result:
  Video stream should appear within 2-3 seconds! üìπ‚úÖ

================================================================================
